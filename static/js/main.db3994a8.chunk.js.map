{"version":3,"sources":["components/Form/Form.js","Contact.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["Form","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","type","onChange","pattern","title","required","onClick","Component","Contact","id","equals","contact","propTypes","PropTypes","string","ContactItem","onDeleteContact","ContactList","contacts","map","Filter","App","filter","handleAddContact","data","uuidv4","newContact","find","alert","handleDeleteContact","idContact","prevState","changeFilter","filterValue","getFilteredContacts","toLowerCase","includes","console","log","contactsString","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","filteredContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db3994a8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          <p>Name</p>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n          <p>Number</p>\r\n          <input\r\n            type=\"tel\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n          <br />\r\n          <button type=\"submit\" onClick={this.handleChange}>\r\n            Add contact\r\n          </button>\r\n        </label>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import PropTypes from 'prop-types';\r\n\r\nclass Contact {\r\n  constructor(id, name, number) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.number = number;\r\n  }\r\n\r\n  equals = contact => {\r\n    return this.name === contact.name;\r\n  };\r\n}\r\n\r\nContact.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\r\n  return (\r\n    <li>\r\n      {name}: {number}\r\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n        <p>Delete</p>\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactItem from './ContactItem';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <ContactItem\r\n            key={id}\r\n            id={id}\r\n            name={name}\r\n            number={number}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div>\r\n    <label>\r\n      <p>Find contacts by name:</p>\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport Form from './components/Form/Form';\nimport { v4 as uuidv4 } from 'uuid';\nimport Contact from './Contact';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  handleAddContact = data => {\n    const { name, number } = data;\n    const id = uuidv4();\n    const newContact = new Contact(id, name, number);\n    if (this.state.contacts.find(contact => newContact.equals(contact))) {\n      alert(`${newContact.name} already exists in contacts`);\n      return;\n    }\n    this.setState({\n      contacts: [...this.state.contacts, newContact],\n    });\n  };\n\n  handleDeleteContact = idContact => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== idContact),\n    }));\n  };\n\n  changeFilter = event => {\n    const filterValue = event.currentTarget.value;\n    this.setState({ filter: filterValue });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    if (filter) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()),\n      );\n    } else {\n      return contacts;\n    }\n  };\n\n  componentDidMount() {\n    console.log('Component did mount');\n    const contactsString = localStorage.getItem('contacts');\n    const contacts = JSON.parse(contactsString);\n    if (contacts) {\n      this.setState({ contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('Component did update');\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n    return (\n      <>\n        <h2>Phonebook</h2>\n        <Form onSubmit={this.handleAddContact} />\n        {filteredContacts.length > 0 && (\n          <div>\n            <h2>Contacts</h2>\n            <Filter value={filter} onChange={this.changeFilter} />\n            <ContactList\n              contacts={filteredContacts}\n              onDeleteContact={this.handleDeleteContact}\n            />\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}